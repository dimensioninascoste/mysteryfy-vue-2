<template>
  <ion-page>
    <ion-router-outlet />
    <ion-grid>
      <ion-row>
        <ion-col>
          <GoogleLogin :callback="loginCallback" popup-type="TOKEN">
            <button>Login Using Google</button>
          </GoogleLogin>
          <!-- <button @click="login">Login Using Google</button> -->
        </ion-col>
      </ion-row>
    </ion-grid>
  </ion-page>
</template>

<script setup lang="ts">
import { 
  IonPage,
  IonRouterOutlet,
  IonGrid,
  IonRow,
  IonCol,
  } from '@ionic/vue';
import { GoogleLogin, decodeCredential, googleAuthCodeLogin, googleLogout } from 'vue3-google-login';
import router from '@/router';
import { loggedIn } from '@/components/globals.vue';

/*   const login = () => {
    googleAuthCodeLogin().then((response) => {
    console.log("Gestisco la risposta", response)
    //this.loggedIn = true;
    router.push({ path: '/tabs/home' })
  })
} */

import type { CallbackTypes } from 'vue3-google-login';

const loginCallback: CallbackTypes.TokenResponseCallback = (response) => {
  console.log("Access Token", response.access_token);
  const logToken = response.access_token
  //invece di spingere la vista a /tabs/home, devo dismettere il modal
  router.push({ path: '/tabs/home' })
  console.log("valore di logToken", logToken)
}


/*   export default {
  data() {
    return {
      user: null,
      callback: (response: any) => {
        console.log("logged in")
        this.loggedIn = true
        console.log(response)
        this.user = decodeCredential(response.credential)
        router.replace({ path: '/tabs/home' })        
      }
    }
  },
} */
</script>